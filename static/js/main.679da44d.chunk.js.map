{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstane","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttatchment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishiedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.679da44d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstane = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fBase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {target: {name, value}} = event;\n    if(name === \"email\") {\n      setEmail(value);\n    } else if(name === \"password\") {\n      setPassword(value);\n    }\n  }\n\n  const onSubmit = async(event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password)\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password)\n      }\n      console.log(data)\n    } catch(error) {\n      setError(error.message)\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev)\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n      < input \n      name = \"email\"\n      type = \"email\"\n      placeholder = \"Email\"\n      required\n      value = {email}\n      onChange = {onChange}\n      className=\"authInput\"\n      />\n      < input \n      name = \"password\"\n      type = \"password\"\n      placeholder = \"Password\"\n      required \n      value = {password}\n      onChange={onChange}\n      className=\"authInput\"\n      />\n      < input \n      type = \"submit\"\n      className=\"authInput authSubmit\"\n      value = {newAccount ? \"Create Account\" : \"Log In\"}\n      />\n      {error && <span className=\"authError\">{error}</span>}\n    </form>\n    <span onClick={toggleAccount} className=\"authSwitch\">\n      {newAccount ? \"Sign in\" : \"Create Account\"}\n    </span>\n  </>\n  )\n}\n\nexport default AuthForm;","import { faGithub, faGoogle, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstane } from \"fBase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target:{name}\n    } = event;\n    let provider;\n    if(name === \"google\") {\n      provider = new firebaseInstane.auth.GoogleAuthProvider();\n    } else if(name === \"github\") {\n      provider = new firebaseInstane.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default Auth;","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fBase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\n    if(ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing(prev => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(nweetObj, newNweet)\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    })\n    setEditing(false);\n  }\n  const onChange = (event) => {\n    const {target: {value},\n    } = event;\n    setNewNweet(value);\n  }\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            < input type = 'text'\n              placeholder = 'Edit your nweet'\n              value = {newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type='submit' value='update nweet' className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\"> \n            Cancel \n          </span>\n        </>\n      ) : (\n          <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n            {isOwner && (\n              <div className=\"nweet_action\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span> \n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n          </>\n        )\n      }\n    </div>\n  )\n}\n\nexport default Nweet;","import { dbService, storageService } from \"fBase\";\nimport {v4 as uuidv4} from \"uuid\"\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n  const [nweet, setNweet] = useState(\"\")\n  const [attachment, setAttatchment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if(nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if(attachment !== \"\") {\n          //uuid는 자동적으로 생성해주는 랜덤한 이름 id\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n      const nweetObj = {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl\n      }\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n  }\n\n  const onChange = (event) => {\n    const {target:{value}} = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {target: {files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishiedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishiedEvent;\n      setAttatchment(result);\n    }\n    reader.readAsDataURL(theFile);\n  }\n\n  const onClearAttachment = () => setAttatchment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  )\n}\n\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\n\nimport { dbService, storageService } from \"fBase\";\nimport React, { useEffect, useState } from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { useHistory } from \"react-router\";\n\nconst Home = ({userObj}) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    // 스냅샷은 기본적으로 데이터베이스에 무슨일 있으면 받는 역할\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        // 무슨 일이 있으면 이 데이터를 만든다.\n        id: doc.id,\n        ...doc.data()\n      }))\n      // 그리고 위의 데이터가 여기에 들어간다\n      setNweets(nweetArray)\n    })\n  }, [])\n \n\n  return (\n  <div className=\"container\">\n    <NweetFactory userObj={userObj} />\n    <div style={{marginTop: 30}}>\n      {nweets.map((nweet) => (\n        // 트윗의 기본적인 데이터들\n        <Nweet \n          key={nweet.id} \n          nweetObj={nweet} \n          isOwner={nweet.creatorId === userObj.uid} />\n      ))}\n    </div>\n  </div>\n  )\n}\nexport default Home;","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Navigation = ({userObj}) => \n<nav>\n  <ul style ={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\n    <li>\n      <Link to=\"/\" style={{marginRight: 10}}>\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\n        \" />\n      </Link>\n    </li>\n    <li>\n      <Link \n      to=\"/profile\"\n      style={{\n        marginLeft: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 12,\n      }}\n      >\n        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n        <span style={{marginTop: 10}}>\n          {userObj.displayName\n            ? `${userObj.displayName}의 Profile` \n            : \"Profile\" }\n        </span>\n      </Link>\n    </li>\n  </ul>\n</nav>\n\nexport default Navigation;","import { authService, dbService } from \"fBase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nexport default ({refreshUser, userObj}) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if(userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n}","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n  return (\n  <Router>\n    {isLoggedIn && <Navigation userObj={userObj}/>}\n    <Switch>\n      {isLoggedIn ? (\n        <div\n        style={{\n          maxWidth: 890,\n          width: \"100%\",\n          margin: \"0 auto\",\n          marginTop: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        >\n          <Route exact path=\"/\">\n            <Home userObj={userObj} />\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile userObj={userObj} refreshUser={refreshUser} />\n          </Route>\n      </div>\n    ) : (\n      <Route exact path=\"/\">\n        <Auth/>\n      </Route>\n      )}\n    </Switch>\n  </Router>\n  )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"fBase\"\n\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true)\n    })\n  }, [])\n  const refreshUser = () => {\n    console.log(authService.currentUser)\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} />        \n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}